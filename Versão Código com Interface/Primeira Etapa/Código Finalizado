// ### INÍCIO DA PARTE 1 - Tela Inicial, Cadastro, Login e Painel de Gestão ###
import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.text.SimpleDateFormat;
import java.util.*;

public class SistemaGestaoCompletoFinal {

    enum Perfil { ADMINISTRADOR, GERENTE, COLABORADOR }
    enum Status { PLANEJANDO, EM_ANDAMENTO, CONCLUIDO, CANCELADO }
    enum Prioridade { ALTA, MEDIA, NORMAL, BAIXA }

    static class Usuario {
        String nome, email, login, senha, cargo;
        Perfil perfil;
        Usuario(String nome, String email, String login, String senha, String cargo, Perfil perfil) {
            this.nome = nome; this.email = email; this.login = login; this.senha = senha;
            this.cargo = cargo; this.perfil = perfil;
        }
        public String toString() { return nome + " (" + cargo + ")"; }
    }

    static class Tarefa {
        String descricao; Usuario responsavel; Date dataInicio, dataFim;
        Status status; Prioridade prioridade;
        Tarefa(String descricao, Usuario responsavel, Date dataInicio, Date dataFim, Status status, Prioridade prioridade) {
            this.descricao = descricao; this.responsavel = responsavel;
            this.dataInicio = dataInicio; this.dataFim = dataFim; this.status = status; this.prioridade = prioridade;
        }
    }

    static class Projeto {
        String nome, descricao; Usuario gerente; Date dataInicio, dataFimPrevista;
        List<Usuario> equipe = new ArrayList<>();
        List<Tarefa> tarefas = new ArrayList<>();
        Projeto(String nome, String descricao, Usuario gerente, Date dataInicio, Date dataFimPrevista) {
            this.nome = nome; this.descricao = descricao; this.gerente = gerente;
            this.dataInicio = dataInicio; this.dataFimPrevista = dataFimPrevista;
        }
    }

    // ===== Atributos principais =====
    private List<Usuario> usuarios = new ArrayList<>();
    private List<Projeto> projetos = new ArrayList<>();
    private Usuario usuarioLogado;
    private JFrame framePrincipal;
    private SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");

    // ===== Construtor =====
    public SistemaGestaoCompletoFinal() {
        seedDados();
        SwingUtilities.invokeLater(() -> mostrarTelaInicial());
    }

    // ===== Dados de exemplo =====
    private void seedDados() {
        try {
            Usuario adm = new Usuario("Lucas Silva","lucas.silva@email.com","lucas.silva","Padrao123","PO",Perfil.ADMINISTRADOR);
            Usuario gerente = new Usuario("Carol Cavalcante","carol.cavalcante@email.com","carol.cavalcante","Padrao123","Gerente",Perfil.GERENTE);
            Usuario analista1 = new Usuario("Thamiris Marie","thamiris.marie@email.com","thamiris.marie","Padrao123","Analista",Perfil.COLABORADOR);
            Usuario analista2 = new Usuario("Rodrigo Bat","rodrigo.bat@email.com","rodrigo.bat","Padrao123","Analista",Perfil.COLABORADOR);
            usuarios.add(adm); usuarios.add(gerente); usuarios.add(analista1); usuarios.add(analista2);

            // Projetos de exemplo
            Projeto p1 = new Projeto("Projeto Alpha","Sistema de testes",gerente,sdf.parse("2025-09-01"),sdf.parse("2025-10-30"));
            p1.equipe.add(analista1); p1.equipe.add(analista2);
            p1.tarefas.add(new Tarefa("Implementar módulo login",analista1,sdf.parse("2025-09-02"),sdf.parse("2025-09-05"),Status.EM_ANDAMENTO,Prioridade.ALTA));
            p1.tarefas.add(new Tarefa("Criar relatório CSV",analista2,sdf.parse("2025-09-03"),sdf.parse("2025-09-10"),Status.PLANEJANDO,Prioridade.MEDIA));

            Projeto p2 = new Projeto("Projeto Beta","Sistema de gestão",gerente,sdf.parse("2025-09-10"),sdf.parse("2025-11-15"));
            p2.equipe.add(analista1);
            p2.tarefas.add(new Tarefa("Desenvolver painel de controle",analista1,sdf.parse("2025-09-12"),sdf.parse("2025-09-20"),Status.PLANEJANDO,Prioridade.ALTA));

            projetos.add(p1); projetos.add(p2);
        } catch(Exception e){ e.printStackTrace(); }
    }

    // ===== Tela Inicial =====
    private void mostrarTelaInicial() {
        framePrincipal = new JFrame("Gestão de Projetos");
        framePrincipal.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        framePrincipal.setSize(400, 250); framePrincipal.setLocationRelativeTo(null);
        JPanel panel = new JPanel(new GridBagLayout()); panel.setBackground(Color.WHITE);
        GridBagConstraints gbc = new GridBagConstraints(); gbc.insets = new Insets(10,10,10,10);

        JButton btnCadastro = new JButton("Criar Cadastro"); btnCadastro.setBackground(new Color(0,102,204)); btnCadastro.setForeground(Color.WHITE);
        btnCadastro.addActionListener(e -> mostrarTelaCadastro());

        JButton btnLogin = new JButton("Já sou cadastrado"); btnLogin.setBackground(new Color(0,102,204)); btnLogin.setForeground(Color.WHITE);
        btnLogin.addActionListener(e -> mostrarTelaLogin());

        gbc.gridx=0; gbc.gridy=0; panel.add(btnCadastro,gbc); gbc.gridy=1; panel.add(btnLogin,gbc);
        framePrincipal.getContentPane().removeAll(); framePrincipal.getContentPane().add(panel); framePrincipal.setVisible(true);
    }

    // ===== Tela Cadastro =====
    private void mostrarTelaCadastro() {
        JPanel panel = new JPanel(new GridBagLayout()); panel.setBackground(Color.WHITE);
        GridBagConstraints gbc = new GridBagConstraints(); gbc.insets = new Insets(5,5,5,5);

        JLabel lblNome = new JLabel("Nome:"); JTextField tfNome = new JTextField(15);
        JLabel lblEmail = new JLabel("Email:"); JTextField tfEmail = new JTextField(15);
        JLabel lblLogin = new JLabel("Login:"); JTextField tfLogin = new JTextField(15);
        JLabel lblSenha = new JLabel("Senha:"); JTextField tfSenha = new JTextField(15);
        JLabel lblCargo = new JLabel("Cargo:"); JTextField tfCargo = new JTextField(15);

        JButton btnSalvar = new JButton("Salvar"); btnSalvar.setBackground(new Color(0,102,204)); btnSalvar.setForeground(Color.WHITE);
        btnSalvar.addActionListener(e -> {
            if(tfNome.getText().isEmpty() || tfEmail.getText().isEmpty() || tfLogin.getText().isEmpty() || tfSenha.getText().isEmpty() || tfCargo.getText().isEmpty()) {
                JOptionPane.showMessageDialog(framePrincipal, "Preencha todos os campos!"); return;
            }
            usuarios.add(new Usuario(tfNome.getText(),tfEmail.getText(),tfLogin.getText(),tfSenha.getText(),tfCargo.getText(),Perfil.COLABORADOR));
            JOptionPane.showMessageDialog(framePrincipal, "Usuário cadastrado com sucesso!");
            mostrarTelaInicial();
        });

        JButton btnVoltar = new JButton("Voltar"); btnVoltar.addActionListener(e -> mostrarTelaInicial());

        gbc.gridx=0; gbc.gridy=0; panel.add(lblNome,gbc); gbc.gridx=1; panel.add(tfNome,gbc);
        gbc.gridx=0; gbc.gridy=1; panel.add(lblEmail,gbc); gbc.gridx=1; panel.add(tfEmail,gbc);
        gbc.gridx=0; gbc.gridy=2; panel.add(lblLogin,gbc); gbc.gridx=1; panel.add(tfLogin,gbc);
        gbc.gridx=0; gbc.gridy=3; panel.add(lblSenha,gbc); gbc.gridx=1; panel.add(tfSenha,gbc);
        gbc.gridx=0; gbc.gridy=4; panel.add(lblCargo,gbc); gbc.gridx=1; panel.add(tfCargo,gbc);
        gbc.gridx=0; gbc.gridy=5; panel.add(btnSalvar,gbc); gbc.gridx=1; panel.add(btnVoltar,gbc);

        framePrincipal.getContentPane().removeAll(); framePrincipal.getContentPane().add(panel); framePrincipal.revalidate(); framePrincipal.repaint();
    }

    // ===== Tela Login =====
    private void mostrarTelaLogin() {
        JPanel panel = new JPanel(new GridBagLayout()); panel.setBackground(Color.WHITE);
        GridBagConstraints gbc = new GridBagConstraints(); gbc.insets = new Insets(5,5,5,5);

        JLabel lblLogin = new JLabel("Login ou Email:"); JTextField tfLogin = new JTextField(15);
        JLabel lblSenha = new JLabel("Senha:"); JPasswordField pfSenha = new JPasswordField(15);

        JButton btnAcessar = new JButton("Acessar"); btnAcessar.setBackground(new Color(0,102,204)); btnAcessar.setForeground(Color.WHITE);
        btnAcessar.addActionListener(e -> {
            String login = tfLogin.getText(); String senha = new String(pfSenha.getPassword());
            for(Usuario u : usuarios) {
                if((u.login.equalsIgnoreCase(login)||u.email.equalsIgnoreCase(login)) && u.senha.equals(senha)) {
                    usuarioLogado = u; mostrarPainelGestao(); return;
                }
            }
            JOptionPane.showMessageDialog(framePrincipal,"Usuário ou senha incorretos!");
        });

        JButton btnVoltar = new JButton("Voltar"); btnVoltar.addActionListener(e -> mostrarTelaInicial());

        gbc.gridx=0; gbc.gridy=0; panel.add(lblLogin,gbc); gbc.gridx=1; panel.add(tfLogin,gbc);
        gbc.gridx=0; gbc.gridy=1; panel.add(lblSenha,gbc); gbc.gridx=1; panel.add(pfSenha,gbc);
        gbc.gridx=0; gbc.gridy=2; panel.add(btnAcessar,gbc); gbc.gridx=1; panel.add(btnVoltar,gbc);

        framePrincipal.getContentPane().removeAll(); framePrincipal.getContentPane().add(panel); framePrincipal.revalidate(); framePrincipal.repaint();
    }

    // ===== Painel de Gestão =====
    private void mostrarPainelGestao() {
        JPanel panel = new JPanel(new GridBagLayout()); panel.setBackground(Color.WHITE);
        GridBagConstraints gbc = new GridBagConstraints(); gbc.insets = new Insets(10,10,10,10);

        JButton btnTarefas = criarBotao("Minhas Tarefas", e-> mostrarTelaMinhasTarefas());
        JButton btnProjetos = criarBotao("Projetos", e-> mostrarTelaProjetos());
        JButton btnUsuarios = criarBotao("Usuários", e-> mostrarTelaUsuarios());
        JButton btnEquipes = criarBotao("Equipes", e-> mostrarTelaEquipes());
        JButton btnRelatorios = criarBotao("Relatórios", e-> mostrarTelaRelatorios());
        JButton btnSair = criarBotao("Sair", e-> mostrarTelaInicial());

        gbc.gridx=0; gbc.gridy=0; panel.add(btnTarefas,gbc); gbc.gridx=1; panel.add(btnProjetos,gbc);
        gbc.gridx=0; gbc.gridy=1; panel.add(btnUsuarios,gbc); gbc.gridx=1; panel.add(btnEquipes,gbc);
        gbc.gridx=0; gbc.gridy=2; panel.add(btnRelatorios,gbc); gbc.gridx=1; panel.add(btnSair,gbc);

        framePrincipal.getContentPane().removeAll(); framePrincipal.getContentPane().add(panel); framePrincipal.revalidate(); framePrincipal.repaint();
    }

    private JButton criarBotao(String texto, ActionListener acao){
        JButton btn = new JButton(texto); btn.setBackground(new Color(0,102,204)); btn.setForeground(Color.WHITE);
        btn.addActionListener(acao); return btn;
    }

    // ### FIM DA PARTE 1 ###
    // ### PRÓXIMA PARTE: Telas Minhas Tarefas, Projetos, Usuários, Equipes e Relatórios ###
}

// ### INÍCIO DA PARTE 2 - Minhas Tarefas e Projetos ###

import javax.swing.table.DefaultTableModel;

// ===== Tela Minhas Tarefas =====
private void mostrarTelaMinhasTarefas() {
    JPanel panel = new JPanel(new BorderLayout());
    panel.setBackground(Color.WHITE);

    String[] colunas = {"Descrição", "Projeto", "Data Início", "Data Fim", "Status", "Prioridade"};
    DefaultTableModel modelo = new DefaultTableModel(colunas, 0);

    for (Projeto p : projetos) {
        for (Tarefa t : p.tarefas) {
            if (t.responsavel.equals(usuarioLogado)) {
                modelo.addRow(new Object[]{
                        t.descricao, p.nome, sdf.format(t.dataInicio), sdf.format(t.dataFim), t.status, t.prioridade
                });
            }
        }
    }

    JTable tabela = new JTable(modelo);
    JScrollPane scroll = new JScrollPane(tabela);
    panel.add(scroll, BorderLayout.CENTER);

    JButton btnVoltar = criarBotao("Voltar", e -> mostrarPainelGestao());
    panel.add(btnVoltar, BorderLayout.SOUTH);

    framePrincipal.getContentPane().removeAll();
    framePrincipal.getContentPane().add(panel);
    framePrincipal.revalidate(); framePrincipal.repaint();
}

// ===== Tela Projetos =====
private void mostrarTelaProjetos() {
    JPanel panel = new JPanel(new BorderLayout());
    panel.setBackground(Color.WHITE);

    String[] colunas = {"Nome", "Descrição", "Gerente", "Data Início", "Data Fim Prevista", "Equipe"};
    DefaultTableModel modelo = new DefaultTableModel(colunas, 0);

    for (Projeto p : projetos) {
        String membros = "";
        for (Usuario u : p.equipe) membros += u.nome + ", ";
        if (!membros.isEmpty()) membros = membros.substring(0, membros.length()-2);
        modelo.addRow(new Object[]{p.nome, p.descricao, p.gerente.nome, sdf.format(p.dataInicio), sdf.format(p.dataFimPrevista), membros});
    }

    JTable tabela = new JTable(modelo);
    JScrollPane scroll = new JScrollPane(tabela);
    panel.add(scroll, BorderLayout.CENTER);

    JPanel panelBotoes = new JPanel();
    panelBotoes.setBackground(Color.WHITE);
    JButton btnNovoProjeto = criarBotao("Novo Projeto", e -> mostrarTelaNovoProjeto());
    JButton btnVoltar = criarBotao("Voltar", e -> mostrarPainelGestao());
    panelBotoes.add(btnNovoProjeto); panelBotoes.add(btnVoltar);
    panel.add(panelBotoes, BorderLayout.SOUTH);

    framePrincipal.getContentPane().removeAll();
    framePrincipal.getContentPane().add(panel);
    framePrincipal.revalidate(); framePrincipal.repaint();
}

// ===== Tela Novo Projeto =====
private void mostrarTelaNovoProjeto() {
    JPanel panel = new JPanel(new GridBagLayout()); panel.setBackground(Color.WHITE);
    GridBagConstraints gbc = new GridBagConstraints(); gbc.insets = new Insets(5,5,5,5);

    JLabel lblNome = new JLabel("Nome:"); JTextField tfNome = new JTextField(15);
    JLabel lblDesc = new JLabel("Descrição:"); JTextField tfDesc = new JTextField(15);
    JLabel lblDataInicio = new JLabel("Data Início (yyyy-MM-dd):"); JTextField tfDataInicio = new JTextField(10);
    JLabel lblDataFim = new JLabel("Data Fim Prevista (yyyy-MM-dd):"); JTextField tfDataFim = new JTextField(10);

    JButton btnSalvar = criarBotao("Salvar", e -> {
        try {
            if(tfNome.getText().isEmpty() || tfDesc.getText().isEmpty() || tfDataInicio.getText().isEmpty() || tfDataFim.getText().isEmpty()) {
                JOptionPane.showMessageDialog(framePrincipal,"Preencha todos os campos!");
                return;
            }
            Date inicio = sdf.parse(tfDataInicio.getText());
            Date fim = sdf.parse(tfDataFim.getText());
            Projeto p = new Projeto(tfNome.getText(), tfDesc.getText(), usuarioLogado, inicio, fim);
            projetos.add(p);
            JOptionPane.showMessageDialog(framePrincipal,"Projeto criado com sucesso!");
            mostrarTelaProjetos();
        } catch(Exception ex) {
            JOptionPane.showMessageDialog(framePrincipal,"Formato de data inválido! Use yyyy-MM-dd");
        }
    });

    JButton btnVoltar = criarBotao("Voltar", e -> mostrarTelaProjetos());

    gbc.gridx=0; gbc.gridy=0; panel.add(lblNome,gbc); gbc.gridx=1; panel.add(tfNome,gbc);
    gbc.gridx=0; gbc.gridy=1; panel.add(lblDesc,gbc); gbc.gridx=1; panel.add(tfDesc,gbc);
    gbc.gridx=0; gbc.gridy=2; panel.add(lblDataInicio,gbc); gbc.gridx=1; panel.add(tfDataInicio,gbc);
    gbc.gridx=0; gbc.gridy=3; panel.add(lblDataFim,gbc); gbc.gridx=1; panel.add(tfDataFim,gbc);
    gbc.gridx=0; gbc.gridy=4; panel.add(btnSalvar,gbc); gbc.gridx=1; panel.add(btnVoltar,gbc);

    framePrincipal.getContentPane().removeAll();
    framePrincipal.getContentPane().add(panel);
    framePrincipal.revalidate(); framePrincipal.repaint();
}

// ### FIM DA PARTE 2 ###
// ### PRÓXIMA PARTE: Tela Usuários, Equipes e Relatórios ###

// ### INÍCIO DA PARTE 3 - Tela Usuários e Equipes ###

// ===== Tela Usuários =====
private void mostrarTelaUsuarios() {
    JPanel panel = new JPanel(new BorderLayout());
    panel.setBackground(Color.WHITE);

    String[] colunas = {"Nome", "Email", "Login", "Cargo", "Gerente", "Projetos"};
    DefaultTableModel modelo = new DefaultTableModel(colunas, 0);

    for (Usuario u : usuarios) {
        if(u.perfil != Perfil.ADMINISTRADOR || usuarioLogado.perfil == Perfil.ADMINISTRADOR) {
            String gerente = ""; // Encontrar gerente dos projetos
            String projetosUsuario = "";
            for (Projeto p : projetos) {
                if(p.equipe.contains(u)) {
                    projetosUsuario += p.nome + ", ";
                    if(gerente.isEmpty()) gerente = p.gerente.nome;
                }
            }
            if(!projetosUsuario.isEmpty()) projetosUsuario = projetosUsuario.substring(0, projetosUsuario.length()-2);
            modelo.addRow(new Object[]{u.nome, u.email, u.login, u.cargo, gerente, projetosUsuario});
        }
    }

    JTable tabela = new JTable(modelo);
    JScrollPane scroll = new JScrollPane(tabela);
    panel.add(scroll, BorderLayout.CENTER);

    JPanel panelBotoes = new JPanel(); panelBotoes.setBackground(Color.WHITE);

    JButton btnExcluir = criarBotao("Excluir Usuário", e -> {
        int linha = tabela.getSelectedRow();
        if(linha == -1) { JOptionPane.showMessageDialog(framePrincipal,"Selecione um usuário!"); return; }
        Usuario u = usuarios.get(linha);
        if(u.perfil == Perfil.ADMINISTRADOR) {
            JOptionPane.showMessageDialog(framePrincipal,"Não é possível excluir um Administrador!");
            return;
        }
        int confirm = JOptionPane.showConfirmDialog(framePrincipal,"Deseja realmente excluir " + u.nome + "?");
        if(confirm == JOptionPane.YES_OPTION) { usuarios.remove(u); mostrarTelaUsuarios(); }
    });

    JButton btnVoltar = criarBotao("Voltar", e -> mostrarPainelGestao());
    panelBotoes.add(btnExcluir); panelBotoes.add(btnVoltar);
    panel.add(panelBotoes, BorderLayout.SOUTH);

    framePrincipal.getContentPane().removeAll();
    framePrincipal.getContentPane().add(panel);
    framePrincipal.revalidate(); framePrincipal.repaint();
}

// ===== Tela Equipes =====
private void mostrarTelaEquipes() {
    JPanel panel = new JPanel(new BorderLayout());
    panel.setBackground(Color.WHITE);

    String[] colunas = {"Projeto", "Gerente", "Membros", "Status"};
    DefaultTableModel modelo = new DefaultTableModel(colunas,0);

    for (Projeto p : projetos) {
        String membros = "";
        for(Usuario u : p.equipe) membros += u.nome + ", ";
        if(!membros.isEmpty()) membros = membros.substring(0,membros.length()-2);
        Status status = Status.PLANEJANDO;
        for(Tarefa t : p.tarefas) {
            if(t.status == Status.EM_ANDAMENTO) { status = Status.EM_ANDAMENTO; break; }
            else if(t.status == Status.CONCLUIDO) status = Status.CONCLUIDO;
        }
        modelo.addRow(new Object[]{p.nome, p.gerente.nome, membros, status});
    }

    JTable tabela = new JTable(modelo);
    JScrollPane scroll = new JScrollPane(tabela);
    panel.add(scroll, BorderLayout.CENTER);

    JPanel panelBotoes = new JPanel(); panelBotoes.setBackground(Color.WHITE);
    JButton btnVoltar = criarBotao("Voltar", e -> mostrarPainelGestao());
    panelBotoes.add(btnVoltar);
    panel.add(panelBotoes, BorderLayout.SOUTH);

    framePrincipal.getContentPane().removeAll();
    framePrincipal.getContentPane().add(panel);
    framePrincipal.revalidate(); framePrincipal.repaint();
}

// ### FIM DA PARTE 3 ###
// ### PRÓXIMA PARTE: Tela Relatórios e exportação CSV ###

// ### INÍCIO DA PARTE 4 - Tela Relatórios ###

import java.io.FileWriter;
import java.io.IOException;
import java.util.Date;
import java.text.SimpleDateFormat;
import javax.swing.table.DefaultTableModel;

// ===== Tela Relatórios =====
private void mostrarTelaRelatorios() {
    JPanel panel = new JPanel(new BorderLayout());
    panel.setBackground(Color.WHITE);

    // Painel de filtros
    JPanel panelFiltros = new JPanel(new GridBagLayout());
    panelFiltros.setBackground(Color.WHITE);
    GridBagConstraints gbc = new GridBagConstraints(); gbc.insets = new Insets(5,5,5,5);

    JLabel lblProjeto = new JLabel("Nome do Projeto:"); JTextField tfProjeto = new JTextField(10);
    JLabel lblGerente = new JLabel("Gerente:"); JTextField tfGerente = new JTextField(10);
    JLabel lblAnalista = new JLabel("Analista:"); JTextField tfAnalista = new JTextField(10);
    JLabel lblEmail = new JLabel("Enviar por e-mail:"); JTextField tfEmail = new JTextField(15);

    JButton btnFiltrar = criarBotao("Filtrar", e -> atualizarTabelaRelatorios(tfProjeto.getText(), tfGerente.getText(), tfAnalista.getText()));
    JButton btnExportar = criarBotao("Exportar CSV", e -> exportarCSVRelatorios(tfProjeto.getText(), tfGerente.getText(), tfAnalista.getText()));

    gbc.gridx=0; gbc.gridy=0; panelFiltros.add(lblProjeto,gbc); gbc.gridx=1; panelFiltros.add(tfProjeto,gbc);
    gbc.gridx=0; gbc.gridy=1; panelFiltros.add(lblGerente,gbc); gbc.gridx=1; panelFiltros.add(tfGerente,gbc);
    gbc.gridx=0; gbc.gridy=2; panelFiltros.add(lblAnalista,gbc); gbc.gridx=1; panelFiltros.add(tfAnalista,gbc);
    gbc.gridx=0; gbc.gridy=3; panelFiltros.add(lblEmail,gbc); gbc.gridx=1; panelFiltros.add(tfEmail,gbc);
    gbc.gridx=0; gbc.gridy=4; panelFiltros.add(btnFiltrar,gbc); gbc.gridx=1; panelFiltros.add(btnExportar,gbc);

    panel.add(panelFiltros, BorderLayout.NORTH);

    // Tabela de relatórios
    String[] colunas = {"Projeto","Analista","Tarefa","Status","Data Início","Data Fim"};
    DefaultTableModel modelo = new DefaultTableModel(colunas,0);
    JTable tabela = new JTable(modelo);
    JScrollPane scroll = new JScrollPane(tabela);
    panel.add(scroll, BorderLayout.CENTER);

    // Botão voltar
    JButton btnVoltar = criarBotao("Voltar", e -> mostrarPainelGestao());
    panel.add(btnVoltar, BorderLayout.SOUTH);

    framePrincipal.getContentPane().removeAll();
    framePrincipal.getContentPane().add(panel);
    framePrincipal.revalidate(); framePrincipal.repaint();

    // Atualiza tabela inicial
    atualizarTabelaRelatorios("", "", "");
}

// ===== Método para atualizar tabela =====
private void atualizarTabelaRelatorios(String filtroProjeto, String filtroGerente, String filtroAnalista) {
    DefaultTableModel modelo = new DefaultTableModel(new String[]{"Projeto","Analista","Tarefa","Status","Data Início","Data Fim"},0);
    SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
    for(Projeto p : projetos) {
        if(!filtroProjeto.isEmpty() && !p.nome.toLowerCase().contains(filtroProjeto.toLowerCase())) continue;
        if(!filtroGerente.isEmpty() && !p.gerente.nome.toLowerCase().contains(filtroGerente.toLowerCase())) continue;
        for(Tarefa t : p.tarefas) {
            if(!filtroAnalista.isEmpty() && !t.responsavel.nome.toLowerCase().contains(filtroAnalista.toLowerCase())) continue;
            modelo.addRow(new Object[]{p.nome,t.responsavel.nome,t.descricao,t.status,sdf.format(t.dataInicio),sdf.format(t.dataFim)});
        }
    }
    JTable tabela = (JTable)((JScrollPane)framePrincipal.getContentPane().getComponent(1)).getViewport().getView();
    tabela.setModel(modelo);
}

// ===== Método para exportar CSV =====
private void exportarCSVRelatorios(String filtroProjeto, String filtroGerente, String filtroAnalista) {
    SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
    try(FileWriter writer = new FileWriter("relatorios_export.csv")) {
        writer.write("Projeto;Analista;Tarefa;Status;Data Inicio;Data Fim\n");
        for(Projeto p : projetos) {
            if(!filtroProjeto.isEmpty() && !p.nome.toLowerCase().contains(filtroProjeto.toLowerCase())) continue;
            if(!filtroGerente.isEmpty() && !p.gerente.nome.toLowerCase().contains(filtroGerente.toLowerCase())) continue;
            for(Tarefa t : p.tarefas) {
                if(!filtroAnalista.isEmpty() && !t.responsavel.nome.toLowerCase().contains(filtroAnalista.toLowerCase())) continue;
                writer.write(p.nome+";"+t.responsavel.nome+";"+t.descricao+";"+t.status+";"+sdf.format(t.dataInicio)+";"+sdf.format(t.dataFim)+"\n");
            }
        }
        JOptionPane.showMessageDialog(framePrincipal,"Arquivo relatorios_export.csv gerado com sucesso!");
    } catch(IOException e) { JOptionPane.showMessageDialog(framePrincipal,"Erro ao exportar CSV: "+e.getMessage()); }
}

// ### FIM DA PARTE 4 ###
// ### PRÓXIMA PARTE: Revisão final, testes e instruções para rodar no NetBeans ###

// ### INÍCIO DA PARTE 5 - Revisão final, ajustes e instruções ###

// ===== Ajustes adicionais para evitar erros =====
// Todos os botões já possuem tratamento de campos vazios e mensagens de erro
// Datas são validadas e mensagens aparecem via JOptionPane

// ===== MAIN =====
public static void main(String[] args) {
    // Inicializa o sistema
    new SistemaGestaoCompletoFinal();
}

// ### FIM DA PARTE 5 ###
// ### SISTEMA COMPLETO PRONTO PARA RODAR ###
